#{{ ansible_managed }}
{% if VAR_IS_DEBIAN == True %}
check process sshd with pidfile /var/run/sshd.pid
    alert monitagnet+sshd@gmail.com only on {timeout}
    group sshd-tcp # sshd-tcp group
    start program = "/etc/init.d/ssh start"
    stop program  = "/etc/init.d/ssh stop"
    if cpu > 60% for 2 cycles then alert
    if cpu > 80% for 5 cycles then restart
    if memory usage > 75% then alert
    if memory usage > 90% then restart
    if failed port 22 protocol ssh for 6 within 15 cycles then restart
    if 5 restarts within 5 cycles then timeout
    depends on sshd-tcp_bin
    depends on sshd-tcp_init


check file sshd-tcp_bin with path /usr/sbin/sshd
   alert monitagnet+sshd@gmail.com but not on { action, instance }
   group sshd-tcp
   #if failed checksum then unmonitor
   if failed permission 755 then unmonitor
   if failed uid root then unmonitor
   if failed gid root then unmonitor

## Test the init scripts.
check file sshd-tcp_init with path /etc/init.d/ssh
   alert monitagnet+sshd@gmail.com but not on { action, instance }
   group sshd-tcp
   #if failed checksum then unmonitor
   #if failed permission 755 then unmonitor
   if failed uid root then unmonitor
   if failed gid root then unmonitor
{% endif %}

{% if VAR_IS_REDHAT == True %}
check process sshd with pidfile /var/run/sshd.pid
    alert monitagnet+sshd@gmail.com only on {timeout}
    group sshd-tcp # sshd-tcp group
    start program = "/bin/systemctl restart sshd start"
    stop program  = "/bin/systemctl restart sshd stop"
    if cpu > 60% for 2 cycles then alert
    if cpu > 80% for 5 cycles then restart
    if memory usage > 75% then alert
    if memory usage > 90% then restart
    if failed port 22 protocol ssh for 6 within 15 cycles then restart
    if 5 restarts within 5 cycles then timeout
    depends on sshd-tcp_bin
    depends on sshd-tcp_init


check file sshd-tcp_bin with path /usr/sbin/sshd
   alert monitagnet+sshd@gmail.com but not on { action, instance }
   group sshd-tcp
   #if failed checksum then unmonitor
   if failed permission 755 then unmonitor
   if failed uid root then unmonitor
   if failed gid root then unmonitor

## Test the init scripts.
check file sshd-tcp_init with path /usr/lib/systemd/system/sshd.service
   alert monitagnet+sshd@gmail.com but not on { action, instance }
   group sshd-tcp
   #if failed checksum then unmonitor
   #if failed permission 755 then unmonitor
   if failed uid root then unmonitor
   if failed gid root then unmonitor
{% endif %}


